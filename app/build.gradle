apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId = "com.android.gles3jni"
            minSdkVersion.apiLevel    = 18
            targetSdkVersion.apiLevel = 23
        }
    }
    android.ndk {
        moduleName  = "gles3jni"
        cppFlags.addAll(["-Werror", "-fno-rtti", "-fno-exceptions", "-std=c++11", "-DGLM_FORCE_RADIANS", "-DGLM_SWIZZLE"])
        cppFlags.addAll(["-D KTX_OPENGL_ES2", "-D KTX_OPENGL=0", "-D KTX_OPENGL_ES1=0", "-D KTX_OPENGL_ES3=0"])
        CFlags.add("-Werror")
        CFlags.addAll(["-D KTX_OPENGL_ES2", "-D KTX_OPENGL=0", "-D KTX_OPENGL_ES1=0", "-D KTX_OPENGL_ES3=0"])
        CFlags.add("-I${file("src/main/jni")}".toString())
        cppFlags.add("-I${file("src/main/jni")}".toString())
        ldLibs.addAll(["log","GLESv3", "EGL" ,"android"])
        stl         = "gnustl_shared"
//        stl         = "gnustl_shared"//"stlport_static"
    }
    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }

    android.productFlavors {
        create ("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
        create ("arm8") {
            ndk.abiFilters.add("arm64-v8a")
        }
        create ("x86-32") {
            ndk.abiFilters.add("x86")
        }
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa

        // build one including all cpu architectures
        create("all")
    }
}

